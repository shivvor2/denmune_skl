[build-system]
requires = ["setuptools>=64", "setuptools_scm[toml]>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "denmune-skl"
dynamic = ["version"]
authors = [{ name = "Loo Jun Zing", email = "jzloo11111@gmail.com" }]
description = "A template for scikit-learn compatible packages."
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "numpy",
    "scipy",
    "scikit-learn",
]
classifiers = [
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: BSD License",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
]

[project.urls]
"Homepage" = "https://github.com/shivvor2/denmune-skl"
"Bug Tracker" = "https://github.com/shivvor2/denmune-skl/issues"
"Documentation" = "https://shivvor2.github.io/denmune-skl/"
"Source Code" = "https://github.com/shivvor2/denmune-skl"

[tool.setuptools.packages.find]
where = ["."]
# This tells the build system to look for the 'denmune_skl' directory.
include = ["denmune_skl*"]

[tool.setuptools_scm]
version_file = "denmune_skl/_version.py"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["win-64", "linux-64", "osx-64", "osx-arm64"]

[tool.pixi.dependencies]
python = ">=3.9"
scikit-learn = ">=1.4.2"

[tool.pixi.pypi-dependencies]
denmune-skl = { path=".", editable=true }

[tool.pixi.feature.lint.dependencies]
# The version below should be aligned with the one of `.pre-commit-config.yaml`
black = "23.3.0"
pre-commit = "3.7.1"
ruff = "0.4.2"

[tool.pixi.feature.lint.tasks]
black = { cmd = "black --check --diff denmune_skl && black --check --diff examples" }
ruff = { cmd = "ruff check --output-format=full denmune_skl && ruff check --output-format=full examples" }
lint = { depends_on = ["black", "ruff"]}

[tool.pixi.feature.test.dependencies]
pytest = "*"
pytest-cov = "*"

[tool.pixi.feature.test.tasks]
test = { cmd = "pytest -vsl --cov=denmune_skl --cov-report=xml denmune_skl" }

[tool.pixi.feature.doc.dependencies]
matplotlib = "*"
numpydoc = "*"
pydata-sphinx-theme = "*"
setuptools-scm = ">=8"  # needed for the versioning
sphinx = "*"
sphinx-design = "*"
sphinx-gallery = "*"
sphinx-prompt = "*"

[tool.pixi.feature.doc.tasks]
build-doc = { cmd = "make html", cwd = "doc" }
clean-doc = { cmd = "rm -rf _build", cwd = "doc" }

[tool.pixi.environments]
doc = ["doc"]
lint = ["lint"]
test = ["test"]
dev = ["doc", "lint", "test"]

[tool.pixi.target.osx-arm64.dependencies]
libgfortran = ">=5.0.0" # For Apple Silicon
libgfortran5 = "*"      # For Intel Macs

[tool.pixi.target.osx-64.dependencies]
libgfortran = ">=5.0.0" # For Apple Silicon
libgfortran5 = "*"      # For Intel Macs

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312", "py313"]
preview = true
exclude = '''
/(
    \.eggs         # exclude a few common directories in the
  | \.git          # root of the project
  | \.vscode
)/
'''
force-exclude = "skltemplate/_version.py"

[tool.ruff]
line-length = 88
select = [
    "C", "E", "F", "W", "I", "N", "D", "B", "A", "RUF", "S",
    "T20", "SIM", "ARG", "PTH", "PD", "PGH", "PIE", "PL",
    "TRY", "UP", "YTT"
]
ignore = [
    # D203: 1 blank line required before class docstring
    "D203",
    # D213: Multi-line docstring summary should start at the second line
    "D213",
    # D401: First line should be in imperative mood
    "D401",
    # D415: First line should end with a period
    "D415",
]

[tool.ruff.lint]
# all rules can be found here: https://beta.ruff.rs/docs/rules/
select = ["E", "F", "W", "I"]
ignore=[
    # space before : (needed for how black formats slicing)
    "E203",
    # do not assign a lambda expression, use a def
    "E731",
    # do not use variables named 'l', 'O', or 'I'
    "E741",
]

[tool.ruff.lint.per-file-ignores]
# It's fine not to put the import at the top of the file in the examples
# folder.
"examples/*"=["E402"]
"doc/conf.py"=["E402"]
"doc/_templates/numpydoc_docstring.py"=["F821", "W292"]
# Tests can be less strict
"denmune/tests/*" = ["D", "S101", "ARG001"]
# Allow relative imports in __init__.py
"denmune/__init__.py" = ["F401"]

[tool.pytest.ini_options]
addopts = "--doctest-modules --color=yes"
doctest_optionflags = "NORMALIZE_WHITESPACE"
